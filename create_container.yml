---
- name: execute role to prepare for rootless container deployment
  hosts: all
  gather_facts: false
  become: yes
  vars_files:
    - vars.yml
    - secrets.yml
  roles:
    - container_prep

- name: deploy the container
  hosts: all
  gather_facts: false
  become: yes
  become_user: "{{container_user}}"
  vars_files:
    - vars.yml
    - secrets.yml
  tasks:

  - name: login to the container registry if required
    containers.podman.podman_login:
      registry: "{{container_registry}}"
      username: "{{registry_username}}"
      password: "{{registry_password}}"
    when: "{{registry_login_required}} ==yes"

  - name: ensure that the "{{container_image}}" image exists
    containers.podman.podman_image:
      name: "{{ container_registry }}/{{ container_image }}"
      tag: "{{ container_tag }}"

  - name: deploy the "{{ container_image }}"":""{{ container_tag }}" container  using podman
    containers.podman.podman_container:
      name: "{{ container_name }}"
      image: "{{ container_image }}:{{ container_tag }}"
      state: started
      publish:
        - "{{ port_mappings[0] | default('') }}"
        - "{{ port_mappings[1] | default('') }}"
        - "{{ port_mappings[2] | default('') }}"
        - "{{ port_mappings[3] | default('') }}"
        - "{{ port_mappings[4] | default('') }}"
      volume:
        - "{{ volume_mappings[0] | default('') }}"
        - "{{ volume_mappings[1] | default('') }}"
        - "{{ volume_mappings[2] | default('') }}"
        - "{{ volume_mappings[3] | default('') }}"
        - "{{ volume_mappings[4] | default('') }}"
      command: "{{ container_entrypoint }}"
    register: result
    retries: 3
    delay: 1
    until: result is not failed



